
package shapeservices;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.3
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ShapeServices", targetNamespace = "http://shapeservices/", wsdlLocation = "http://localhost:8080/Shape_EX10/ShapeServices?WSDL")
public class ShapeServices_Service
    extends Service
{

    private final static URL SHAPESERVICES_WSDL_LOCATION;
    private final static WebServiceException SHAPESERVICES_EXCEPTION;
    private final static QName SHAPESERVICES_QNAME = new QName("http://shapeservices/", "ShapeServices");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/Shape_EX10/ShapeServices?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SHAPESERVICES_WSDL_LOCATION = url;
        SHAPESERVICES_EXCEPTION = e;
    }

    public ShapeServices_Service() {
        super(__getWsdlLocation(), SHAPESERVICES_QNAME);
    }

    public ShapeServices_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), SHAPESERVICES_QNAME, features);
    }

    public ShapeServices_Service(URL wsdlLocation) {
        super(wsdlLocation, SHAPESERVICES_QNAME);
    }

    public ShapeServices_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SHAPESERVICES_QNAME, features);
    }

    public ShapeServices_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ShapeServices_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ShapeServices
     */
    @WebEndpoint(name = "ShapeServicesPort")
    public ShapeServices getShapeServicesPort() {
        return super.getPort(new QName("http://shapeservices/", "ShapeServicesPort"), ShapeServices.class);
    }

    /**
     * 
     * @param features
     *     A list of {&#064;link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the &lt;code&gt;features&lt;/code&gt; parameter will have their default values.
     * @return
     *     returns ShapeServices
     */
    @WebEndpoint(name = "ShapeServicesPort")
    public ShapeServices getShapeServicesPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://shapeservices/", "ShapeServicesPort"), ShapeServices.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SHAPESERVICES_EXCEPTION!= null) {
            throw SHAPESERVICES_EXCEPTION;
        }
        return SHAPESERVICES_WSDL_LOCATION;
    }

}
